// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type ConflictExceptionReason string

// Enum values for ConflictExceptionReason
const (
	ConflictExceptionReasonConcurrentModification ConflictExceptionReason = "CONCURRENT_MODIFICATION"
)

// Values returns all known values for ConflictExceptionReason. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ConflictExceptionReason) Values() []ConflictExceptionReason {
	return []ConflictExceptionReason{
		"CONCURRENT_MODIFICATION",
	}
}

type Format string

// Enum values for Format
const (
	FormatCsv        Format = "CSV"
	FormatOpenCypher Format = "OPEN_CYPHER"
)

// Values returns all known values for Format. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Format) Values() []Format {
	return []Format{
		"CSV",
		"OPEN_CYPHER",
	}
}

type GraphStatus string

// Enum values for GraphStatus
const (
	GraphStatusCreating     GraphStatus = "CREATING"
	GraphStatusAvailable    GraphStatus = "AVAILABLE"
	GraphStatusDeleting     GraphStatus = "DELETING"
	GraphStatusResetting    GraphStatus = "RESETTING"
	GraphStatusUpdating     GraphStatus = "UPDATING"
	GraphStatusSnapshotting GraphStatus = "SNAPSHOTTING"
	GraphStatusFailed       GraphStatus = "FAILED"
)

// Values returns all known values for GraphStatus. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (GraphStatus) Values() []GraphStatus {
	return []GraphStatus{
		"CREATING",
		"AVAILABLE",
		"DELETING",
		"RESETTING",
		"UPDATING",
		"SNAPSHOTTING",
		"FAILED",
	}
}

type ImportTaskStatus string

// Enum values for ImportTaskStatus
const (
	ImportTaskStatusInitializing   ImportTaskStatus = "INITIALIZING"
	ImportTaskStatusExporting      ImportTaskStatus = "EXPORTING"
	ImportTaskStatusAnalyzingData  ImportTaskStatus = "ANALYZING_DATA"
	ImportTaskStatusImporting      ImportTaskStatus = "IMPORTING"
	ImportTaskStatusReprovisioning ImportTaskStatus = "REPROVISIONING"
	ImportTaskStatusRollingBack    ImportTaskStatus = "ROLLING_BACK"
	ImportTaskStatusSucceeded      ImportTaskStatus = "SUCCEEDED"
	ImportTaskStatusFailed         ImportTaskStatus = "FAILED"
	ImportTaskStatusCancelling     ImportTaskStatus = "CANCELLING"
	ImportTaskStatusCancelled      ImportTaskStatus = "CANCELLED"
)

// Values returns all known values for ImportTaskStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ImportTaskStatus) Values() []ImportTaskStatus {
	return []ImportTaskStatus{
		"INITIALIZING",
		"EXPORTING",
		"ANALYZING_DATA",
		"IMPORTING",
		"REPROVISIONING",
		"ROLLING_BACK",
		"SUCCEEDED",
		"FAILED",
		"CANCELLING",
		"CANCELLED",
	}
}

type PrivateGraphEndpointStatus string

// Enum values for PrivateGraphEndpointStatus
const (
	PrivateGraphEndpointStatusCreating  PrivateGraphEndpointStatus = "CREATING"
	PrivateGraphEndpointStatusAvailable PrivateGraphEndpointStatus = "AVAILABLE"
	PrivateGraphEndpointStatusDeleting  PrivateGraphEndpointStatus = "DELETING"
	PrivateGraphEndpointStatusFailed    PrivateGraphEndpointStatus = "FAILED"
)

// Values returns all known values for PrivateGraphEndpointStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (PrivateGraphEndpointStatus) Values() []PrivateGraphEndpointStatus {
	return []PrivateGraphEndpointStatus{
		"CREATING",
		"AVAILABLE",
		"DELETING",
		"FAILED",
	}
}

type SnapshotStatus string

// Enum values for SnapshotStatus
const (
	SnapshotStatusCreating  SnapshotStatus = "CREATING"
	SnapshotStatusAvailable SnapshotStatus = "AVAILABLE"
	SnapshotStatusDeleting  SnapshotStatus = "DELETING"
	SnapshotStatusFailed    SnapshotStatus = "FAILED"
)

// Values returns all known values for SnapshotStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SnapshotStatus) Values() []SnapshotStatus {
	return []SnapshotStatus{
		"CREATING",
		"AVAILABLE",
		"DELETING",
		"FAILED",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonConstraintViolation  ValidationExceptionReason = "CONSTRAINT_VIOLATION"
	ValidationExceptionReasonIllegalArgument      ValidationExceptionReason = "ILLEGAL_ARGUMENT"
	ValidationExceptionReasonMalformedQuery       ValidationExceptionReason = "MALFORMED_QUERY"
	ValidationExceptionReasonQueryCancelled       ValidationExceptionReason = "QUERY_CANCELLED"
	ValidationExceptionReasonQueryTooLarge        ValidationExceptionReason = "QUERY_TOO_LARGE"
	ValidationExceptionReasonUnsupportedOperation ValidationExceptionReason = "UNSUPPORTED_OPERATION"
	ValidationExceptionReasonBadRequest           ValidationExceptionReason = "BAD_REQUEST"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"CONSTRAINT_VIOLATION",
		"ILLEGAL_ARGUMENT",
		"MALFORMED_QUERY",
		"QUERY_CANCELLED",
		"QUERY_TOO_LARGE",
		"UNSUPPORTED_OPERATION",
		"BAD_REQUEST",
	}
}
